
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Administrator';
    }

    function isOwner(uid) {
      return request.auth.uid == uid;
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if isOwner(userId) || isAdmin();
    }

    match /userStates/{userId} {
      allow read: if request.auth != null;
      allow write: if isOwner(userId) || isAdmin();
    }

    match /activity/{docId} {
      allow read, get: if isOwner(request.resource.data.uid) || isAdmin();
      allow list: if request.query.uid == request.auth.uid || isAdmin();
      allow create: if request.auth != null;
      allow update, delete: if isAdmin();
    }

    match /timesheet/{docId} {
      allow read, get: if isOwner(request.resource.data.uid) || isAdmin();
      allow list: if request.query.uid == request.auth.uid || isAdmin();
      allow create: if request.auth != null;
      allow update, delete: if isAdmin();
    }
  }
}
