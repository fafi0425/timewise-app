rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for Admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Administrator';
    }

    // USERS: Allow read access for all authenticated users, and write access only for the user themselves or an admin.
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isAdmin();
      allow list: if request.auth != null || isAdmin(); // Allow any authenticated user to list users for rosters
    }

    // USER STATES: Allow users to manage their own state. Allow any authenticated user to read for team status components.
    match /userStates/{userId} {
      allow write: if request.auth.uid == userId || isAdmin();
      // Allow reading a single document if you are the owner or an admin
      allow get: if request.auth.uid == userId || isAdmin();
      // Allow listing documents if authenticated (for team status components)
      allow list: if request.auth != null || isAdmin();
    }
    
    // ACTIVITY & TIMESHEET: More restrictive. Users can only query their own logs. Admins can read all.
    match /activity/{docId} {
      allow create: if request.auth.uid == request.resource.data.uid;
      allow read, write: if resource.data.uid == request.auth.uid || isAdmin();
      // Allow list only when the query is filtered by the user's own UID.
      allow list: if (request.query.resource.data.uid == request.auth.uid || isAdmin());
    }

    match /timesheet/{docId} {
       allow create: if request.auth.uid == request.resource.data.uid;
       allow read, write: if resource.data.uid == request.auth.uid || isAdmin();
       allow list: if (request.query.resource.data.uid == request.auth.uid || isAdmin());
    }
  }
}
