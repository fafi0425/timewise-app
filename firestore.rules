rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Overbreaks can be read by any authenticated user for the alerts feature.
    // A user can only create their own overbreak log.
    match /overbreaks/{docId} {
      allow list, get: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
    }

    match /users/{userId} {
      // Users can read and update their own profile information.
      // Admins can read any user's profile.
      allow read, update: if request.auth.uid == userId || 
                           get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Administrator';
      
      // Allow creation of a user document if the user is creating their own.
      allow create: if request.auth.uid == userId;

      // Prevent deletion of user documents from the client.
      allow delete: if false;
    }

    match /userStates/{userId} {
      // Users can read and write to their own state document.
      allow read, write: if request.auth.uid == userId;
    }

    match /activity/{activityId} {
      // Users can create their own activity logs.
      allow create: if request.auth.uid == request.resource.data.uid;
      
      // Allow users to read their own activity logs.
      // Admins can read all activity logs.
      allow read: if request.auth.uid == resource.data.uid ||
                    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Administrator';
                    
      // No one can update or delete activity logs from the client.
      allow update, delete: if false;
    }
    
    match /timesheet/{entryId} {
       // Users can create their own timesheet entries.
      allow create: if request.auth.uid == request.resource.data.uid;
      
      // Users can read their own timesheet entries.
      allow read: if request.auth.uid == resource.data.uid ||
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Administrator';
                     
      // No one can update or delete from the client.
      allow update, delete: if false;
    }
  }
}
