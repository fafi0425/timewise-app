
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read their own data, and admins can read any user data.
    // Any authenticated user can list users, which is needed for shift rosters.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow list: if request.auth != null; 
      allow update: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Administrator';
      allow create: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Administrator';
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Administrator';
    }

    // Admins can read all user states. Users can read/write their own state.
    match /userStates/{userId} {
      allow read, write: if request.auth.uid == userId;
      allow list, get: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Administrator';
    }

    // Users can create/read their own activity logs. Admins can read all logs.
    match /activity/{logId} {
      allow create: if request.auth.uid == request.resource.data.uid;
      allow read, list: if request.auth.uid == resource.data.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Administrator';
    }
    
    // Users can create/read their own timesheet entries. Admins can read all entries.
    match /timesheet/{entryId} {
      allow create: if request.auth.uid == request.resource.data.uid;
      allow read, list: if request.auth.uid == resource.data.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Administrator';
    }
  }
}
