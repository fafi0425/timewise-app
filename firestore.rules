rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is an Administrator
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Administrator';
    }

    // Users can only read/write their own user document.
    // Admins can read/write any user document.
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId || isAdmin();
      allow create: if isAuthenticated();
    }
    
    // User states can be read by any authenticated user for the dashboard.
    // Users can only write to their own state document.
    match /userStates/{userId} {
      allow read: if isAuthenticated();
      allow write: if request.auth.uid == userId;
    }

    // Activity logs are immutable. Users can only create their own logs.
    // Admins can read all logs.
    match /activity/{logId} {
      allow read: if request.auth.uid == resource.data.uid || isAdmin();
      allow create: if request.auth.uid == request.resource.data.uid;
      allow update, delete: if false; // Logs are immutable
    }

    // Timesheet entries are immutable. Users can only create their own entries.
    // Admins can read all entries.
    match /timesheet/{entryId} {
      allow read: if request.auth.uid == resource.data.uid || isAdmin();
      allow create: if request.auth.uid == request.resource.data.uid;
      allow update, delete: if false;
    }

    // Overbreak logs are immutable. Users can only create their own entries.
    // Admins and the user themselves can read them.
    match /overbreaks/{overbreakId} {
       allow read: if request.auth.uid == resource.data.uid || isAdmin();
       allow create: if request.auth.uid == request.resource.data.uid;
       allow update, delete: if false;
    }
  }
}
