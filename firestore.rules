rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an Administrator
    function isAdmin(request) {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Administrator';
    }

    // User Collection Rules
    match /users/{userId} {
      // Admins can read/write any user document.
      // Authenticated users can read any user's profile for display purposes (e.g., OnShiftList).
      // Users can only update their own profile.
      allow read: if request.auth != null;
      allow update: if request.auth.uid == userId || isAdmin(request);
      allow create: if isAdmin(request) || request.auth.uid == userId;
    }

    // User State Collection Rules
    match /userStates/{userId} {
      // Admins can read any user's state.
      // Authenticated users can read any user's state for UI components (OnBreakList).
      // Users can only write to their own state document.
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // Activity Log Collection Rules
    match /activity/{activityId} {
      // Admins can read/list all activity.
      // Users can list and read their own activity logs.
      allow list, read: if isAdmin(request) || (request.auth != null && resource.data.uid == request.auth.uid);
      // Users can create their own activity logs.
      allow create: if request.auth.uid == request.resource.data.uid;
      // No one can update or delete activity logs from the client.
      allow update, delete: if false;
    }

    // Timesheet Collection Rules
    match /timesheet/{entryId} {
       // Admins can read/list all timesheet entries.
       // Users can list and read their own timesheet entries.
       allow list, read: if isAdmin(request) || (request.auth != null && resource.data.uid == request.auth.uid);
       // Users can create their own timesheet entries.
       allow create: if request.auth.uid == request.resource.data.uid;
       // No one can update or delete timesheet entries from the client.
       allow update, delete: if false;
    }
  }
}
